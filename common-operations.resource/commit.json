{"compress":true,"commitItems":[["cbaf4a95-3512-41e4-b4f1-a379a69963b6",1535444264262,"# 常用操作\n\n经常用的命令。\n\n```console\n$ git clone\n$ git branch\n$ git checkout 分支名\n$ git checkout -b 分支名\n$ git checkout origin/<远程分支> -b <本地分支>\n$ git add\n$ git checkout -- <file>\n$ git reset\n$ git commit\n$ git push\n$ git fetch  #并没更改本地仓库的代码，只是拉取了远程commit数据，将远程仓库的commit版本号 更新为最新。分支git log信息不会变\n$ git pull  #fetch+merge，把远程代码拉到本地并merge，git log信息会更新\n$ git merge\n$ git rebase\n$ git log\n$ git rebase -i <提交版本号>\n```\n\n#### 全局设置\nset Rebase by default when doing git pull:\n```git\ngit config --global pull.rebase true\n```\n\n#### 项目初始化\ncreate a new repository on the command line:\n```git\necho \"# my-action-gradle\" >> README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit remote add origin https://github.com/wjpdeveloper/my-action-gradle.git\ngit push -u origin master\n```\n\npush an existing repository from the command line:\n```console\ngit remote add origin https://github.com/wjpdeveloper/my-action-gradle.git\ngit push -u origin master\n```\n\n#### 单独设置项目的用户信息\n```console\nD:\\CODEROOT\\GitHub\\my-action-git>git config user.name wjpdeveloper\n\nD:\\CODEROOT\\GitHub\\my-action-git>git config user.email wjpdev@gmail.com\n\nD:\\CODEROOT\\GitHub\\my-action-git>git config user.name\nwjpdeveloper\n\nD:\\CODEROOT\\GitHub\\my-action-git>git config user.email\nwjpdev@gmail.com\n```\n\n#### 撤消本地提交\n```console\ngit reset HEAD~2        # undo last two commits, keep changes\ngit reset --hard HEAD~2 # undo last two commits, discard changes  \n```\n\n#### 从git中删除文件而不从文件系统中删除它\n如果你在git add 时操作不慎，最终可能会添加你不想提交的文件。 \n但是，git rm会将它从暂存区域以及文件系统中删除，这可能不是你想要的。在这种情况下，确保只删除暂存版本，并将文件添加到.gitingore以避免再次出现同样的错误：\n```console\ngit reset filename          # or git remove --cached filename\necho filename >> .gitignore # add it to .gitingore to avoid re-adding it\n```\n\n#### 恢复暂存区\n如果已经将一些文件添加到暂存区后又后悔了,可执行\n```\ngit rm path/to/file --cached\n```\n命令将文件从暂存区索引中删除，但是仍然会将文件保留在工作目录。这比直接使用`git rm file -f`命令完全删除文件会安全一点。\n\n\n#### 编辑提交消息\n在提交的情况下修改拼写错误：\n```console\ngit commit --amend                  # start $EDITOR to edit the message\ngit commit --amend -m \"New message\" # set the new message directly\n```\n但并非所有git-amend都能这样做。如果忘记添加文件，只需添加它并修改之前的提交：\n```console\ngit add forgotten_file \ngit commit --amend\n```\n`--amend`实际上会创建一个替换前一个提交的新提交，因此不要用它来修改已经到中央存储库的提交。\n\n#### 恢复推送的提交\n如果错误的提交进入中央存储库，git提供了一种简单的方法来恢复单个或多个提交：\n```console\n git revert c761f5c              # reverts the commit with the specified id\n git revert HEAD^                # reverts the second to last commit\n git revert develop~4..develop~2 # reverts a whole range of commits\n```\n如果你只想对working tree进行必要的更改，则可以使用--no-commit/ -n ：\n```console\n# undo the last commit, but don't create a revert commit \ngit revert -n HEAD\n```\n\n#### 谁打乱了我的代码？\n```console\ngit blame [file_name]\n```\n\n#### 交互式变基(rebase）\n它可以用来编辑提交信息，或者将多个提交压缩成一个提交.\n```\ngit rebase -i origin/master\n\ngit rebase -i HEAD~6\n```\n\n该命令会显示提交列表和可执行操作的详细描述。例如以下操作将会把多个提交压缩成一个：\n```\n1 pick 80f2a48 Add feature X\n2 squash 2c74ea2 Add junit tests for feature X\n3 squash 4k81nm5 Bugfix for feature X\n```\n最终的结果会是生成一个提交消息为“Add feature X”的提交。\n如果需要恢复一个有问题的提交，我们可以使用 `git revert COMMIT_ID`\n\n\n#### 修改最近一次提交的commit信息\n```\ngit commit --amend -m \"your new message\"\n```\n\n#### 删除远程分支\n```\ngit branch -r -d origin/feature/TEST-0001\ngit push origin :feature/TEST-0001\n```\n\n#### 查看历史记录\n```\ngit log --graph --decorate --oneline\n```\n\n",[[1535444240594,["wjpdeveloper@CN17567-D-1113",[[1,17,"| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |\n\n"]],[16,16],[258,258]]],[1535444247238,["wjpdeveloper@CN17567-D-1113",[[-1,17,"| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |\n"]],[16,256],[16,16]]],[1535444248352,["wjpdeveloper@CN17567-D-1113",[[-1,17,"\n"]],[17,17],[16,16]]],[1535444266407,["wjpdeveloper@CN17567-D-1113",[[1,16,"===="]],[16,16],[18,18]]],[1535444268561,["wjpdeveloper@CN17567-D-1113",[[-1,16,"===="]],[18,18],[16,16]]],[1535444269215,["wjpdeveloper@CN17567-D-1113",[[1,16,"++++"]],[16,16],[18,18]]],[1535444269708,["wjpdeveloper@CN17567-D-1113",[[-1,16,"++++"]],[18,18],[16,16]]],[1535444270359,["wjpdeveloper@CN17567-D-1113",[[1,16,"__"]],[16,16],[17,17]]],[1535444270852,["wjpdeveloper@CN17567-D-1113",[[-1,16,"__"]],[17,17],[16,16]]],[1535444271191,["wjpdeveloper@CN17567-D-1113",[[1,16,"****"]],[16,16],[18,18]]],[1535444271670,["wjpdeveloper@CN17567-D-1113",[[-1,16,"****"]],[18,18],[16,16]]],[1535444275291,["wjpdeveloper@CN17567-D-1113",[[1,411,"\n"],[1,454,"\n"],[1,514,"\n"],[1,559,"\n"],[1,818,"\n"],[1,952,"\n"],[1,1261,"\n"],[1,1432,"\n"],[1,1553,"\n"],[1,1715,"\n"],[-1,1740,"```"],[1,1744,"    "],[-1,1773,"```"],[-1,1844,"\n"],[1,1859,"\n"],[1,1874,"\n"],[1,2028,"\n"],[1,2072,"\n"],[1,2130,"\n"],[1,2195,"\n"],[1,2235,"\n"],[1,2463,"\n"],[1,2512,"\n"],[1,2620,"\n"],[1,2677,"\n"],[-1,2705,"```"],[1,2709,"    "],[1,2738,"    "],[-1,2758,"\n```"],[-1,2806,"```"],[1,2810,"    "],[1,2839,"    "],[1,2886,"    "],[-1,2924,"```"],[-1,3010,"\n"],[-1,3034,"```"],[1,3038,"    "],[-1,3079,"```\n"],[-1,3096,"```"],[1,3100,"    "],[1,3142,"    "],[-1,3177,"```\n"],[-1,3194,"```"],[1,3198,"    "],[-1,3235,"```\n\n"]],[16,16],[0,0]]]],null,"wjpdeveloper@CN17567-D-1113"]]}